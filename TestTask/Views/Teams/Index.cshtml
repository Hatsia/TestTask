@model List<TeamViewModel>
@using Microsoft.AspNetCore.Identity
@using TestTask.Models.Entities;
@inject SignInManager<User> SignInManager

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

@if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
{
    <p>
        <div>
            <a class="btn btn-primary" asp-action="Create">Create New Team</a>
        </div>
    </p>
}
@if (TempData.Any())
{
    <div class="alert alert-info">
        @TempData.First(x => x.Key == "1").Value
    </div>
}

<table class="table">
    <thead>
        <tr>
            <th>
                Id
            </th>
            <th>
                Name
            </th>
            <th>
                Users
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Users.Count)
                </td>
                <td>
                    @if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> <span> | </span>
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a> <span> | </span>
                    }
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> <span> | </span>
                    <a asp-action="JoinTheTeam" asp-route-id="@item.Id"> Join </a> |
                    <a asp-action="LeaveTheTeam" asp-route-id="@item.Id"> Leave </a>
                </td>
            </tr>
        }
    </tbody>
</table>
